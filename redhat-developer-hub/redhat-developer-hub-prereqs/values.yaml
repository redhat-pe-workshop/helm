nameOverride: "backstage"

namespace: default

backstage:
  argocd:
    password:
  gitlab:
    token:
  kubernetes:
    sa_token:
  oauth:
    clientId:
    clientSecret:
  postgresql:
    password: password
  orchestrator:
    token: 

rbacPolicy:
  - "p, role:default/location_read, catalog.entity.read, read, allow"
  - "p, role:default/location_read, catalog.location.read, read, allow"

  - "p, role:default/location_read_developer, catalog.entity.read, read, allow"
  - "p, role:default/location_read_developer, catalog.location.read, read, allow"

  - "p, role:default/platformengineer, catalog.entity.create, create, allow"
  - "p, role:default/platformengineer, catalog.entity.refresh, update, allow"
  - "p, role:default/platformengineer, catalog.entity.delete, delete, allow"
  - "p, role:default/platformengineer, catalog.location.create, create, allow"
  - "p, role:default/platformengineer, catalog.location.delete, delete, allow"
  
  - "p, role:default/scaffolder_execute, scaffolder.action.execute, use, allow"
  - "p, role:default/scaffolder_execute, scaffolder.template.parameter.read, read, allow"
  - "p, role:default/scaffolder_execute, scaffolder.template.step.read, read, allow"
  - "p, role:default/scaffolder_execute, scaffolder.task.create, create, allow"
  - "p, role:default/scaffolder_execute, scaffolder.task.cancel, use, allow"
  - "p, role:default/scaffolder_execute, scaffolder.task.read, read, allow"
  - "p, role:default/scaffolder_execute, catalog.location.create, create, allow"

  - "p, role:default/plugins, topology.view.read, read, allow"
  - "p, role:default/plugins, tekton.view.read, read, allow"
  - "p, role:default/plugins, argocd.view.read, read, allow"
  - "p, role:default/plugins, kubernetes.proxy, use, allow"

  - "p, role:default/workflowUser, orchestrator.workflow.create-ocp-namespace-swt, read, allow"
  - "p, role:default/workflowUser, orchestrator.workflow.use.create-ocp-namespace-swt, update, allow"

  - "p, role:default/workflowAdmin, orchestrator.workflow, read, allow"
  - "p, role:default/workflowAdmin, orchestrator.workflow.use, update, allow"
  - "p, role:default/workflowAdmin, orchestrator.workflowAdminView, read, allow"

  - "g, group:default/platformengineers, role:default/location_read"
  - "g, group:default/platformengineers, role:default/platformengineer"
  - "g, group:default/platformengineers, role:default/scaffolder_execute"
  - "g, group:default/platformengineers, role:default/plugins"

  - "g, group:default/developers, role:default/location_read_developer"
  - "g, group:default/developers, role:default/developer"
  - "g, group:default/developers, role:default/scaffolder_execute"
  - "g, group:default/developers, role:default/plugins"

  - "g, group:default/developers, role:default/workflowUser"
  - "g, group:default/platformengineers, role:default/workflowAdmin"

rbacConditionalPolicies:
  - result: CONDITIONAL
    roleEntityRef: 'role:default/location_read_developer'
    resourceType: catalog-entity
    pluginId: catalog
    permissionMapping:
      - read
    conditions:
      not:
        rule: HAS_ANNOTATION
        resourceType: catalog-entity
        params:
          annotation: backstage.io/managed-by
          value: orchestrator

  - conditions:
      params:
        claims: 
          - $ownerRefs
      resourceType: catalog-entity
      rule: IS_ENTITY_OWNER
    permissionMapping:
      - delete
      - update
    pluginId: catalog
    resourceType: catalog-entity
    result: CONDITIONAL
    roleEntityRef: role:default/developer

argocd:
  enabled: true
  syncwave: "-1"